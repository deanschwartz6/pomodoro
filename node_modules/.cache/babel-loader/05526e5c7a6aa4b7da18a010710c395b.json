{"ast":null,"code":"var _jsxFileName = \"/Users/devenviorment/Desktop/react-projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport ButtonHandler from \"./ButtonHandler\";\nimport StopButtonHandler from \"./StopButtonHandler\";\nimport TimerSection from \"./TimerSection\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [sessionActive, setSessionActive] = useState(false);\n  const [sessionCountdown, setSessionCountdown] = useState(0);\n  const [focusSessionActive, setFocusSessionActive] = useState(false);\n  const [barValue, setBarValue] = useState(0); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  useInterval(() => {\n    if (focusSessionActive) {\n      setBarValue(sessionCountdown / (focusDuration * 60) * 100);\n    } else if (!focusSessionActive & sessionCountdown !== 0) {\n      setBarValue(sessionCountdown / (breakDuration * 60) * 100);\n    }\n\n    setSessionCountdown(currentSessionCountdown => {\n      if (focusSessionActive && currentSessionCountdown === focusDuration * 60) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        setFocusSessionActive(!focusSessionActive);\n        return currentSessionCountdown = 0;\n      } else if (!focusSessionActive && currentSessionCountdown === breakDuration * 60) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        setFocusSessionActive(!focusSessionActive);\n        return currentSessionCountdown = 0;\n      } else {\n        return currentSessionCountdown += 1;\n      }\n    });\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    if (!sessionActive) setSessionActive(true);\n\n    if (!focusSessionActive && sessionCountdown === 0) {\n      setFocusSessionActive(currentFocusSession => {\n        return !currentFocusSession;\n      });\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestId: \"decrease-focus\",\n    spanClass: \"oi oi-minus\",\n    focusDuration: focusDuration,\n    setFocusDuration: setFocusDuration,\n    sessionActive: sessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestId: \"increase-focus\",\n    spanClass: \"oi oi-plus\",\n    focusDuration: focusDuration,\n    setFocusDuration: setFocusDuration,\n    sessionActive: sessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestId: \"decrease-break\",\n    spanClass: \"oi oi-minus\",\n    breakDuration: breakDuration,\n    setBreakDuration: setBreakDuration,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestId: \"increase-break\",\n    spanClass: \"oi oi-plus\",\n    breakDuration: breakDuration,\n    setBreakDuration: setBreakDuration,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StopButtonHandler, {\n    isTimerRunning: isTimerRunning,\n    setIsTimerRunning: setIsTimerRunning,\n    setFocusDuration: setFocusDuration,\n    setBreakDuration: setBreakDuration,\n    setSessionCountdown: setSessionCountdown,\n    setFocusSessionActive: setFocusSessionActive,\n    setSessionActive: setSessionActive,\n    sessionActive: sessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(TimerSection, {\n    sessionActive: sessionActive,\n    focusSessionActive: focusSessionActive,\n    minutesToDuration: minutesToDuration,\n    secondsToDuration: secondsToDuration,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    sessionCountdown: sessionCountdown,\n    barValue: barValue,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/devenviorment/Desktop/react-projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","ButtonHandler","StopButtonHandler","TimerSection","Pomodoro","isTimerRunning","setIsTimerRunning","sessionActive","setSessionActive","sessionCountdown","setSessionCountdown","focusSessionActive","setFocusSessionActive","barValue","setBarValue","focusDuration","setFocusDuration","breakDuration","setBreakDuration","currentSessionCountdown","Audio","play","playPause","currentFocusSession","prevState","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration} from \"../utils/duration\";\nimport {secondsToDuration} from \"../utils/duration\";\nimport ButtonHandler from \"./ButtonHandler\";\nimport StopButtonHandler from \"./StopButtonHandler\";\nimport TimerSection from \"./TimerSection\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [sessionActive, setSessionActive] = useState(false);\n  const [sessionCountdown, setSessionCountdown] = useState(0);\n  const [focusSessionActive, setFocusSessionActive] = useState(false);\n  const [barValue, setBarValue] = useState(0);\n\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n\n  useInterval(() => {\n      if (focusSessionActive) {\n        setBarValue((sessionCountdown / (focusDuration * 60)) * 100);\n      } else if (!focusSessionActive & (sessionCountdown !== 0)) {\n        setBarValue((sessionCountdown / (breakDuration * 60)) * 100);\n      }\n      setSessionCountdown((currentSessionCountdown) => {\n        if (\n          focusSessionActive &&\n          currentSessionCountdown === focusDuration * 60\n        ) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          setFocusSessionActive(!focusSessionActive);\n          return (currentSessionCountdown = 0);\n        } else if (\n          !focusSessionActive &&\n          currentSessionCountdown === breakDuration * 60\n        ) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          setFocusSessionActive(!focusSessionActive);\n          return (currentSessionCountdown = 0);\n        } else {\n          return (currentSessionCountdown += 1);\n        }\n      });\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    if (!sessionActive) setSessionActive(true);\n    if (!focusSessionActive && sessionCountdown === 0) {\n      setFocusSessionActive((currentFocusSession) => {\n        return !currentFocusSession;\n      });\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <ButtonHandler\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestId=\"decrease-focus\"\n                spanClass=\"oi oi-minus\"\n                focusDuration={focusDuration}\n                setFocusDuration={setFocusDuration}\n                sessionActive={sessionActive}\n              />\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <ButtonHandler\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestId=\"increase-focus\"\n                spanClass=\"oi oi-plus\"\n                focusDuration={focusDuration}\n                setFocusDuration={setFocusDuration}\n                sessionActive={sessionActive}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <ButtonHandler\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestId=\"decrease-break\"\n                  spanClass=\"oi oi-minus\"\n                  breakDuration={breakDuration}\n                  setBreakDuration={setBreakDuration}\n                  isTimerRunning={isTimerRunning}\n                />\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <ButtonHandler\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestId=\"increase-break\"\n                  spanClass=\"oi oi-plus\"\n                  breakDuration={breakDuration}\n                  setBreakDuration={setBreakDuration}\n                  isTimerRunning={isTimerRunning}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <StopButtonHandler\n              isTimerRunning={isTimerRunning}\n              setIsTimerRunning={setIsTimerRunning}\n              setFocusDuration={setFocusDuration}\n              setBreakDuration={setBreakDuration}\n              setSessionCountdown={setSessionCountdown}\n              setFocusSessionActive={setFocusSessionActive}\n              setSessionActive={setSessionActive}\n              sessionActive={sessionActive}\n            />\n          </div>\n        </div>\n      </div>\n        <TimerSection\n          sessionActive={sessionActive}\n          focusSessionActive={focusSessionActive}\n          minutesToDuration={minutesToDuration}\n          secondsToDuration={secondsToDuration}\n          focusDuration={focusDuration}\n          breakDuration={breakDuration}\n          sessionCountdown={sessionCountdown}\n          barValue={barValue}\n          isTimerRunning={isTimerRunning}\n        />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}