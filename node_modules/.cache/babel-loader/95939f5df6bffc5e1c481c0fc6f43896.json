{"ast":null,"code":"var _jsxFileName = \"/Users/devenviorment/Desktop/react-projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimerSection.js\";\nimport React from \"react\";\n\nfunction TimerSection({\n  sessionActive,\n  focusSessionActive,\n  minutesToDuration,\n  secondsToDuration,\n  focusDuration,\n  breakDuration,\n  sessionCountdown,\n  barValue\n}) {\n  if (sessionActive) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }\n    }, focusSessionActive ? \"Focusing\" : \"On Break\", \" for \", focusSessionActive ? `${minutesToDuration(focusDuration)}` : `${minutesToDuration(breakDuration)}`, \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }, focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`, \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": barValue // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: `${barValue}%`\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n  ;\n}\n\nexport default TimerSection;","map":{"version":3,"sources":["/Users/devenviorment/Desktop/react-projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimerSection.js"],"names":["React","TimerSection","sessionActive","focusSessionActive","minutesToDuration","secondsToDuration","focusDuration","breakDuration","sessionCountdown","barValue","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,kBAAhB;AAAoCC,EAAAA,iBAApC;AAAuDC,EAAAA,iBAAvD;AAA0EC,EAAAA,aAA1E;AAAyFC,EAAAA,aAAzF;AAAwGC,EAAAA,gBAAxG;AAA0HC,EAAAA;AAA1H,CAAtB,EAA2J;AACvJ,MAAIP,aAAJ,EAAmB;AACf,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,kBAAkB,GAAG,UAAH,GAAgB,UADnC,WACoDA,kBAAkB,GAAI,GAAEC,iBAAiB,CAACE,aAAD,CAAgB,EAAvC,GAA4C,GAAEF,iBAAiB,CAACG,aAAD,CAAgB,EADrJ,aAFJ,eAMI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCJ,kBAAkB,GAAI,GAAEE,iBAAiB,CAACC,aAAa,GAAG,EAAhB,GAAqBE,gBAAtB,CAAwC,EAA/D,GAAoE,GAAEH,iBAAiB,CAACE,aAAa,GAAG,EAAhB,GAAqBC,gBAAtB,CAAwC,EADlJ,eANJ,CADJ,CAFJ,eAcI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,uBAAc,GAHlB;AAII,uBAAc,KAJlB;AAKI,uBAAeD,QALnB,CAK6B;AAL7B;AAMI,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAG,GAAEF,QAAS;AAArB,OANX,CAMsC;AANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAdJ,CADJ;AA+BH;;AAAA;AACJ;;AAED,eAAeR,YAAf","sourcesContent":["import React from \"react\";\n\nfunction TimerSection({sessionActive, focusSessionActive, minutesToDuration, secondsToDuration, focusDuration, breakDuration, sessionCountdown, barValue}) {\n    if (sessionActive) {\n        return (\n            <div>\n                {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n                <div className=\"row mb-2\">\n                    <div className=\"col\">\n                        {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n                        <h2 data-testid=\"session-title\">\n                        {focusSessionActive ? \"Focusing\" : \"On Break\"} for {focusSessionActive ? `${minutesToDuration(focusDuration)}` : `${minutesToDuration(breakDuration)}`} minutes\n                        </h2>\n                        {/* TODO: Update message below correctly format the time remaining in the current session */}\n                        <p className=\"lead\" data-testid=\"session-sub-title\">\n                        {focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`} remaining\n                        </p>\n                    </div>\n                </div>\n                <div className=\"row mb-2\">\n                    <div className=\"col\">\n                        <div className=\"progress\" style={{ height: \"20px\" }}>\n                            <div\n                                className=\"progress-bar\"\n                                role=\"progressbar\"\n                                aria-valuemin=\"0\"\n                                aria-valuemax=\"100\"\n                                aria-valuenow={barValue} // TODO: Increase aria-valuenow as elapsed time increases\n                                style={{ width: `${barValue}%` }} // TODO: Increase width % as elapsed time increases\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };   \n}\n\nexport default TimerSection;"]},"metadata":{},"sourceType":"module"}